{"title":"Analysis of UVP data along a transect","markdown":{"yaml":{"title":"Analysis of UVP data along a transect"},"headingText":"How does abundance change along the transect?","containsRefs":false,"markdown":"\n\n\n### 1 - We need to load in and parse through the data\n\nWe need to first import the data and select the core information that we need. The UVP project folder has all the casts we want and then some. We only want the BATS Validation cruise - bv57. We'll need to remove the hs casts.\n\n#### Setting up the requisites\n\n```{r echo = F, warning=F}\nrm(list = ls())\nlibrary(EcotaxaTools)\nlibrary(tibble)\nlibrary(ggplot2)\n\n```\n\n#### Importing data and trimming list to keep only bv casts\n\n```{r}\nuvp_dat <- ecopart_import(\"~/BV_transect_export\") #load in initial ecopart object\n\n# we need to trim out the hs casts\n# One way to do that would be to hard-code indices for those but that's not reliable\n#So I'm using regex\n\n#get index of hs data for both par and zoo files\nhs_index_par <- grep(\"hs\",names(uvp_dat$par_files))\nhs_index_zoo <- grep('hs', names(uvp_dat$zoo_files))\n\nuvp_dat$par_files <- uvp_dat$par_files[-hs_index_par]\nuvp_dat$zoo_files <- uvp_dat$zoo_files[-hs_index_zoo]\n```\n\n### 2 - Identifying the meta-data\n\nWe want to now get a little idea of the data that we have. The main questions we have are how many locations are at each site, which are day vs night, and how deep does each cast go?\n\n#### First, let's look at the time of day for these casts\n\nAll these data are in the meta file. Something to keep in mind is that UVP time is recorded in UTC - so you need to get sunrise/sunset times from [NOAA's Solar Calculator](https://gml.noaa.gov/grad/solcalc/sunrise.html). I'm not super precise with it, I just go with the month at longitude.\n\n```{r}\n# I'm writing a function for myself for later\nget_time <- function(full_date) {\n  time_stamp <- sapply(strsplit(as.character(full_date),\" \"),\n                       `[[`,2)\n  return(as.POSIXct(time_stamp, format = '%H:%M:%S'))\n}\n\n#my function above will just get the time and set it to todays date but that is fine\nuvp_dat$meta$time_of_day <- sapply(get_time(uvp_dat$meta$sampledate), timeOfDay,'10:18:00','21:48:00',1) #this will add time of day to our metadata file\n\n```\n\nThere's actually very few night casts, let's just go with the day casts then for this project.\n\n#### Now we want to check the max-depth for all our casts\n\n```{r}\n# a quick funciton to find max depth\nget_max_d <- function(zoo_file) {\n  max_d <- zoo_file$depth_including_offset[which.max(zoo_file$depth_including_offset)]\n  return(max_d)\n}\n\nmax_d <- rep(NA, length(uvp_dat$zoo_files))\nfor(i in 1:length(uvp_dat$zoo_files)) {\n  max_d[i] <- get_max_d(uvp_dat$zoo_files[[i]])\n}\ndepth_tibble <- tibble(profileid = names(uvp_dat$zoo_files),\n                       max_d = max_d)\n\nuvp_dat$meta <- as_tibble(merge(uvp_dat$meta,\n                                depth_tibble))\ntibble(Profile_id = uvp_dat$meta$profileid,\n       lat = uvp_dat$meta$latitude,\n       tod = uvp_dat$meta$time_of_day,\n       max_d = uvp_dat$meta$max_d)\n```\n\nLooking at this data, we have several casts going to at least 500m, some going to 1200m, and several going to 5000m. So what we can do is look at four ocean regions - epipelagic (0-200), upper mesopelagic (200-500), lower mesopelagic (500 - 1200), bathypelagic (1200 - 4000).\n\nNext steps will be to calculate concentration for each profile, then look at integrated densities. But first we need to rename our data to core taxonomic groups.\n\n#### First let's look at which taxonomic categories we have:\n\n```{r}\nlist_taxa <- function(uvp_dat) {\n  tdf <- do.call(rbind, uvp_dat$zoo_files)\n  return(tdf$name)\n} #should add name column option\n\ncbind(names(table(list_taxa(uvp_dat))),\n       table(list_taxa(uvp_dat)) / length(list_taxa(uvp_dat)))\n```\n\nFrom this, let's look at: Rhizaria, Copepods, Trichodesmium, Chaetognath, Annelida, Eumalacostraca. One issue we want to correct is that darksphere is classified as living and we want to change that to be non-living\n\n```{r}\nnames <- c('living', \"Rhizaria\",\"Copepoda\",\"Trichodesmium\",\n           \"Chaetognatha\",'Annelida',\"Eumalacostraca\",'not-living','darksphere')\n\nuvp_dat <- uvp_dat %>% \n  add_zoo(names_to, 'name', names, suppress_print = T)\n\ndarksphere_switch <- function(zoo_file) {\n  new_name <- zoo_file$name\n  new_name[which(new_name == 'darksphere')] <- 'not-living'\n  return(new_name)\n}\n\nuvp_dat <- add_zoo(uvp_dat, darksphere_switch, 'name')\ntibble(names(table(list_taxa(uvp_dat))),\n       table(list_taxa(uvp_dat)) / length(list_taxa(uvp_dat)))\n```\n\n### 3 - Calculating the concentration & Integrating\n\nWe now want to calculate the concentration of different taxa. We'll do this in 20m bins.\n\n```{r}\nconc_list <- vector('list',length(uvp_dat$zoo_files))\nnames(conc_list) <- names(uvp_dat$zoo_files)\nfor(i in 1:length(conc_list)) {\n  conc_list[[i]] <- uvp_conc(uvp_dat,names(conc_list)[i],seq(0,max(uvp_dat$zoo_files[[i]]$depth_including_offset),20))\n  \n  conc_list[[i]]$mp <- get_bin_limtis(conc_list[[i]]$db)$mp\n}\n```\n\nWith this, we can now want the integrated abundance for our four ocean zones. We'll set up a holder shell first. Then fill it out with needed information about each cast which goes into it. We'll reference the meta data folder a lot for this:\n\n```{r}\nintg_abund <- vector('list', 4)\nnames(intg_abund) <- c('euphotic','upper_meso',\n                       'lower_meso','bathy')\n\n#a function I might use later\n#' @param max_d a vector of max_depths corresponding to casts\n#' @param depth_breaks numeric vector with zone limits\n#' @param zone_labels character vector of names for lower limits\nassign_zones <- function(max_d, depth_breaks, zone_labels) {\n  if(length(depth_breaks) != length(zone_labels)) {\n    stop('depth_breaks and zone_labels must be equal length')\n  }\n  \n  d_match <- sapply(max_d, nearest, depth_breaks)\n  zones <- zone_labels[match(d_match, depth_breaks)]\n  return(zones)\n}\n\nuvp_dat$meta$zone <- sapply(uvp_dat$meta$max_d, assign_zones,\n                            c(500,1200,4000),\n                            c(2,3,4))\n\nfor(i in 1:length(intg_abund)) {\n  intg_abund[[i]]$d_lim <- c(0,200,500,1200,4000)[c(i, i+1)]\n  intg_abund[[i]] <- c(intg_abund[[i]], vector('list', 5))\n  names(intg_abund[[i]]) <- c('d_lim','Trichodesmium','Rhizaria',\n                            'Eumalacostraca','Copepoda', 'Chaetognatha')\n  for(j in 2:length(intg_abund[[i]])) {\n    intg_abund[[i]][[j]]$profile_id <- uvp_dat$meta$profileid[which(uvp_dat$meta$zone >= i)]\n  }\n}\n```\n\nNow we have a list shell set up to integrate abundance for each of our taxa of interest in each zone. This will be a fairly large loop since we're iterating the process many times over. This is definitely the quick and dirty way to get things done. In the future I might want to build out functions for each of these tasks then apply them to each individual taxa\n\n```{r}\n\n#ugly functions to avoid ridiculous looping\nsubset_taxa <- function(df, taxa) {\n  rdf <- df[df$taxa == taxa,]\n  return(rdf)\n}\n\nsubset_d <- function(df, d_lower, d_upper) {\n  rdf <- df[df$mp > d_lower &\n              df$mp < d_upper, ]\n  return(rdf)\n}\n\norg_loop <- function(df, lim_list) {\n  intg <- trapz_integarate(df$mp, df$conc_m3,\n                           lim_list$d_lim[1], lim_list$d_lim[2],\n                           subdivisions = 500)\n  return(intg$value)\n}\n\nnrow_check <- function(df) {\n  if(nrow(df) == 0) {\n    return(FALSE)\n  } else {\n    return(TRUE)\n  }\n}\n  \nfor(i in 1:length(intg_abund)) {\n  for(j in 2:length(intg_abund[[i]])) {\n    temp_conc_list <- lapply(conc_list, subset_taxa, names(intg_abund[[i]])[j])\n    temp_conc_list <- lapply(temp_conc_list, subset_d, intg_abund[[i]]$d_lim[1], intg_abund[[i]]$d_lim[2])\n    temp_conc_list <- temp_conc_list[which(names(temp_conc_list) %in% intg_abund[[i]][[j]]$profile_id)]\n    \n    if(any(!(sapply(temp_conc_list,nrow_check)))) {\n      drop <- which(!(sapply(temp_conc_list,nrow_check)))\n      temp_conc_list <- temp_conc_list[-drop]\n      intg_abund[[i]][[j]]$profile_id <- intg_abund[[i]][[j]]$profile_id[-drop]\n    }\n    \n    intg_taxa <- sapply(temp_conc_list, org_loop, intg_abund[[i]])\n    intg_abund[[i]][[j]]$num_m2 <- as.numeric(intg_taxa[match(names(intg_taxa),intg_abund[[i]][[j]]$profile_id)])\n  }\n}\n```\n\nGreat! Now we have a big set of data with integrated abundances in each four depth zone. Now all we have to do is plot them according to their latitudes. Looking at the data however, it seems that we have really limited data for Eumalacostraca and Chaetognatha. So let's just look at Copepods, Rhizaria, and Trichodesmium.\n\n### 4 - Plotting our data\n\nBefore we plot the data, it is nice to get everything into a clean plotting dataframe. I'm thinking that it'll be best to plot all three taxa on panels based on the depth\n\n```{r}\n#set the taxa we are intested in plotting\nplot_taxa <- c('Trichodesmium', 'Rhizaria', 'Copepoda')\n\nmush_into_df <- function(obj) {\n  rdf <- as.data.frame(obj[[1]])\n  rdf$taxa <- rep(names(obj), nrow(rdf))\n  return(rdf)\n}\n\nplot_list <- vector('list', 4)\nnames(plot_list) <- c('Euphotic', 'Upper_Meso','Lower_Meso','Bathy')\n\nfor(i in 1:length(plot_list)) {\n  for(j in 1:length(intg_abund[[i]][plot_taxa])) {\n    plot_list[[i]][[j]] <- mush_into_df(intg_abund[[i]][plot_taxa[j]])\n  }\n  plot_list[[i]] <- do.call(rbind, plot_list[[i]])\n  \n  plot_list[[i]] <- merge(plot_list[[i]],\n                          data.frame(profile_id = uvp_dat$meta$profileid,\n                                     lat = uvp_dat$meta$latitude))\n  \n}\n```\n\nGreat! Now everything is all set up for us to plot our figures based on latitude\n\n```{r}\nplot_output <- vector('list', 4)\nfor(i in 1:length(plot_output)) {\n  plot_list[[i]] <- plot_list[[i]][!is.na(plot_list[[i]]$num_m2),]\n  plot_output[[i]] <- ggplot(plot_list[[i]],aes(y = num_m2, x = lat, col = taxa)) +\n   geom_point(size = 2) +\n    geom_smooth(se = F, method = 'loess',\n                size = 1, alpha = .05, span = 1)+\n   coord_flip()+\n    labs(x = 'Latitude', y = 'Integrated Abudance [Number/m2]',\n         subtitle = names(plot_list)[i],\n         col = \"\")+\n   theme_bw()\n}\nprint(plot_output)\n```\n\nCool we have some figures to start working with. I'm saving a bit of data to and providing here. It is an RDS so to load it you just type readRDS('filename.rds').\n\n```{r}\nsaveRDS(plot_list, './item01_integrated-abundances-by-zone')\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"self-contained-math":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"output-file":"bv57_exploratory_density.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"editor":"visual","theme":"cosmo","title":"Analysis of UVP data along a transect"},"extensions":{"book":{"multiFile":true}}}}}